{"version":3,"sources":["assets/images/aneka-makanan.jpg","components/Navbar.js","components/Footer/Footer.js","components/ImageAndWelcome.js","components/CityCard.js","components/CityList.js","components/SearchCity.js","config/api.js","pages/Home.js","components/CategoryList.js","components/SearchKeyword.js","components/SearchCriteria.js","components/RatingLabel.js","components/RestaurantCard.js","pages/City.js","components/RestaurantProfile.js","components/Review.js","pages/RestaurantDetail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","Footer","href","ImageAndWelcome","style","marginBottom","src","mainImage","width","alt","CityCard","props","city","name","country_name","id","_renderCityList","cities","length","map","key","CityList","title","showSubtitle","subtitle","SearchCity","type","placeholder","value","onChange","onClick","onClickSearch","API","zomato","baseUrl","api_key","process","Home","changeKeywordHandler","e","setState","keyword","target","searchHandler","state","url","axios","get","headers","params","q","then","data","status","citiesResultSearch","location_suggestions","cityKeywordSearch","catch","err","console","log","getFeaturedCities","city_ids","featuredCities","this","marginTop","Component","CategoryList","categories","category","categorySelected","categoryClickHandler","SearchKeyword","onClickAddToCriteria","SearchCriteria","criteria","cri","index","criteriaName","aria-hidden","color","removeCriteriaHandler","RatingLabel","backgroundColor","labelColor","borderColor","text","RestaurantCard","restaurant","thumb","borderRadius","fontWeight","location","locality","address","user_rating","rating_color","aggregate_rating","rating_text","cuisines","currency","average_cost_for_two","textDecoration","City","restaurants","entity_id","entity_type","transformCategoriesData","getCityData","city_id","newCriteria","push","filter","event","addToCriteriaHandler","splice","getCategoriesData","renderRestaurantList","match","RestaurantProfile","class","featured_image","votes","Review","border","review","user","profile_image","foodie_level_num","foodie_level","foodie_color","review_time_friendly","rating","review_text","RestaurantDetail","getRestaurantData","restaurant_id","res_id","getReviewData","reviews","user_reviews","App","path","component","exact","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","require","config"],"mappings":"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","file":"static/js/main.a8f538bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aneka-makanan.7998eb99.jpg\";","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => (\r\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary sticky-top\">\r\n    <Link className=\"navbar-brand text-white\" to=\"/\">\r\n      Muhammad Agung Fadhil (41518120059) - Tugas Rapid\r\n    </Link>\r\n  </nav>\r\n);\r\n\r\nexport default Navbar;\r\n","import React from 'react'\r\nimport './Footer.css'\r\n\r\nconst Footer = () => (\r\n  <footer className=\"my-footer\">\r\n    <div className=\"text-center\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-4 text-center\">\r\n            <h5>About FoodParadise</h5>\r\n            <ul>\r\n              <li>\r\n                <a href=\"/#\">About</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"/#\">Contact Us</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-sm-4 text-center\">\r\n            <h5>Suppert</h5>\r\n            <ul>\r\n              <li>\r\n                <a href=\"/#\">FAQ</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"/#\">Help Desk</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"/#\">Forums</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-sm-4 text-center\">\r\n            <h5>Download App</h5>\r\n            <ul>\r\n              <li>\r\n                <a href=\"/#\">Google Play</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"/#\">App Store</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"social-networks\">\r\n        <a href=\"/#\" className=\"twitter\"><i className=\"fa fa-twitter\"></i></a>\r\n        <a href=\"/#\" className=\"facebook\"><i className=\"fa fa-facebook-official\"></i></a>\r\n        <a href=\"/#\" className=\"google\"><i className=\"fa fa-google-plus\"></i></a>\r\n      </div>\r\n      <p className=\"footer-copyright\">Copyright &copy; 2019 FoodParadise</p>\r\n    </div>\r\n  </footer>\r\n)\r\n\r\nexport default Footer","import React from \"react\";\r\nimport mainImage from \"../assets/images/aneka-makanan.jpg\";\r\n\r\nconst ImageAndWelcome = () => (\r\n  <>\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\" style={{ marginBottom: 30 }}>\r\n        <img src={mainImage} width=\"100%\" alt=\"aneka-makanan\"></img>\r\n      </div>\r\n    </div>\r\n    <div className=\"row\">\r\n      <div className=\"col-12\">\r\n        <div className=\"card text-white bg-success mb-3 text-center\">\r\n          <div className=\"card-header\">\r\n            <h1>Welcome to FoodParadise</h1>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <h4 className=\"card-title\">\r\n              The Easiest Way to Find Restaurants and Food\r\n            </h4>\r\n            <p className=\"card-text\">\r\n              You can grab information about restaurants, cafees, cuisines with\r\n              just a few clicks.\r\n            </p>\r\n            <p className=\"card-text\">\r\n              Start by choosing the featured cities below, or search the city\r\n              name.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default ImageAndWelcome;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CityCard = props => (\r\n  <div className=\"col-4\">\r\n    <div className=\"card bg-light mb-3\">\r\n      <div className=\"card-body\">\r\n        <h3 className=\"card-title\">{props.city.name}</h3>\r\n        <p>{props.city.country_name}</p>\r\n        <Link to={`/city/${props.city.id}`} className=\"card-text\">\r\n          See restaurants in {props.city.name}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default CityCard;\r\n","import React from \"react\";\r\nimport CityCard from \"./CityCard\";\r\n\r\nconst CityList = props => (\r\n  <>\r\n    <div className=\"row\">\r\n      <div className=\"col-12\">\r\n        <h3>{props.title}</h3>\r\n        {props.showSubtitle === true && props.subtitle !== \"\" && (\r\n          <h6 className=\"text-muted\">\r\n            Search result for keyword '{props.subtitle}'\r\n          </h6>\r\n        )}\r\n      </div>\r\n    </div>\r\n    <div className=\"row\">\r\n      {props.cities == null ? (\r\n        <div className=\"col\">\r\n          <p>Loading...</p>\r\n        </div>\r\n      ) : (\r\n        _renderCityList(props.cities)\r\n      )}\r\n    </div>\r\n  </>\r\n);\r\n\r\nconst _renderCityList = cities => {\r\n  if (cities.length > 0) {\r\n    return cities.map(city => <CityCard key={city.id} city={city} />);\r\n  } else {\r\n    return (\r\n      <div className=\"col\">\r\n        <p className=\"text-danger\">Data Not Found!</p>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default CityList;\r\n","import React from \"react\";\r\n\r\nconst SearchCity = props => (\r\n  <div className=\"row\" style={{ marginBottom: 30 }}>\r\n    <div className=\"col\">\r\n      <h3>Search City</h3>\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <div className=\"form-row\">\r\n            <div className=\"col-11\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Type keyword or city name\"\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n              />\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <button onClick={props.onClickSearch} className=\"btn btn-primary\" type=\"button\">\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default SearchCity;\r\n","export const API = {\r\n  zomato: {\r\n    baseUrl: 'https://developers.zomato.com/api/v2.1/',\r\n    api_key: process.env.REACT_APP_API_KEY_ZOMATO\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport ImageAndWelcome from \"../components/ImageAndWelcome\";\r\nimport CityList from \"../components/CityList\";\r\nimport SearchCity from \"../components/SearchCity\";\r\nimport axios from \"axios\";\r\nimport { API } from '../config/api'\r\n\r\nclass Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      keyword: \"\",\r\n      featuredCities: null,\r\n      citiesResultSearch: null,\r\n      cityKeywordSearch: \"\"\r\n    };\r\n  }\r\n  changeKeywordHandler = e => {\r\n    this.setState({ keyword: e.target.value });\r\n  };\r\n  searchHandler = () => {\r\n    let keyword = this.state.keyword;\r\n    var url = `${API.zomato.baseUrl}/cities`;\r\n    axios\r\n      .get(url, {\r\n        headers: {\r\n          \"user-key\": API.zomato.api_key\r\n        },\r\n        params: {\r\n          q: keyword\r\n        }\r\n      })\r\n      .then(({ data }) => {\r\n        if (data.status === \"success\") {\r\n          this.setState({\r\n            citiesResultSearch: data.location_suggestions,\r\n            keyword: \"\",\r\n            cityKeywordSearch: keyword\r\n          });\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n  getFeaturedCities = () => {\r\n    var url = `${API.zomato.baseUrl}/cities`\r\n    axios\r\n      .get(url, {\r\n        headers: {\r\n          \"user-key\": API.zomato.api_key\r\n        },\r\n        params: {\r\n          city_ids: \"74,11052,170\"\r\n        }\r\n      })\r\n      .then(({ data }) => {\r\n        if (data.status === \"success\") {\r\n          this.setState({ featuredCities: data.location_suggestions });\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n  componentDidMount() {\r\n    this.getFeaturedCities();\r\n  }\r\n  render() {\r\n    // const citiesDummy = [\r\n    //   { id: 72, name: \"Jakarta\", country_name: \"Indonesia\" },\r\n    //   { id: 11052, name: \"Bandung\", country_name: \"Indonesia\" },\r\n    //   { id: 170, name: \"Bali\", country_name: \"Indonesia\" }\r\n    // ];\r\n    return (\r\n      <>\r\n        <ImageAndWelcome />\r\n        <div className=\"container\" style={{ marginTop: 30, marginBottom: 30 }}>\r\n          <CityList\r\n            title={\"Featured Cities\"}\r\n            cities={this.state.featuredCities}\r\n          />\r\n          <SearchCity\r\n            value={this.state.keyword}\r\n            onChange={this.changeKeywordHandler}\r\n            onClickSearch={this.searchHandler}\r\n          />\r\n          {this.state.cityKeywordSearch !== '' && (\r\n            <CityList\r\n              title={\"Search Result\"}\r\n              cities={this.state.citiesResultSearch}\r\n              showSubtitle={true}\r\n              subtitle={this.state.cityKeywordSearch}\r\n            />\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst CategoryList = props =>\r\n  props.categories ? (\r\n    <div className=\"list-group\">\r\n      {props.categories.map(category => (\r\n        <button\r\n          key={category.id}\r\n          className={\r\n            \"list-group-item list-group-item-action \" +\r\n            (props.categorySelected && props.categorySelected.id === category.id\r\n              ? \"active\"\r\n              : \"\")\r\n          }\r\n          onClick={() => props.categoryClickHandler(category)}\r\n        >\r\n          {category.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  ) : (\r\n    <p>Loading...</p>\r\n  );\r\n\r\nexport default CategoryList;\r\n","import React from \"react\";\r\n\r\nconst SearchKeyword = props => (\r\n  <>\r\n    <h5>Keyword</h5>\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <div className=\"form-row\">\r\n          <div className=\"col-10\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Type keyword i.e : restaurant's name, location, cuisine, etc.\"\r\n              value={props.keyword}\r\n              onChange={props.changeKeywordHandler}\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            <button onClick={props.onClickAddToCriteria} className=\"btn btn-primary\" type=\"button\">\r\n              Add to criteria\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default SearchKeyword;\r\n","import React from \"react\";\r\n\r\nconst SearchCriteria = props => (\r\n  <div className=\"card bg-light mb-3\" style={{ marginTop: 20 }}>\r\n    <div className=\"card-body\">\r\n      <p className=\"card-title\">Find Restaurants based on criteria : </p>\r\n      <table className=\"table table-hover\">\r\n        <tbody>\r\n          {props.criteria.map((cri, index) => (\r\n            <tr key={index} className=\"table-active\">\r\n              <td width=\"40%\">{cri.criteriaName}</td>\r\n              <td width=\"50%\">{cri.data.name}</td>\r\n              <td width=\"10%\">\r\n                {cri.criteriaName !== \"City\" && (\r\n                  <i\r\n                    className=\"fa fa-times\"\r\n                    aria-hidden=\"true\"\r\n                    style={{ color: \"red\" }}\r\n                    onClick={() => props.removeCriteriaHandler(index)}\r\n                  ></i>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pull-right\">\r\n        <button onClick={props.onClickSearch} className=\"btn btn-primary\" type=\"button\">\r\n          Search\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default SearchCriteria;\r\n","import React from \"react\";\r\n\r\nconst RatingLabel = props => (\r\n  <div\r\n    className=\"btn btn-sm\"\r\n    style={{\r\n      color: \"white\",\r\n      backgroundColor: `#${props.labelColor}`,\r\n      borderColor: `#${props.labelColor}`\r\n    }}\r\n  >\r\n    {props.text}\r\n  </div>\r\n);\r\n\r\nexport default RatingLabel;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RatingLabel from \"./RatingLabel\";\r\n\r\nconst RestaurantCard = props => (\r\n  <div className=\"col-6\" style={{ marginBottom: 20 }}>\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <div className=\"row\">\r\n          <div className=\"col-3\">\r\n            <img\r\n              className=\"img-responsive\"\r\n              src={props.restaurant.thumb}\r\n              alt=\"\"\r\n              style={{ borderRadius: 5, width: 100 }}\r\n            ></img>\r\n          </div>\r\n          <div className=\"col-9\">\r\n            <h4 className=\"text-success\" style={{ fontWeight: 800 }}>\r\n              {props.restaurant.name}\r\n            </h4>\r\n            <h6>{props.restaurant.location.locality}</h6>\r\n            <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <table className=\"table\">\r\n          <tbody>\r\n            <tr>\r\n              <td>Rating</td>\r\n              <td>\r\n                <RatingLabel\r\n                  labelColor={props.restaurant.user_rating.rating_color}\r\n                  text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Cuisines</td>\r\n              <td>{props.restaurant.cuisines}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Cost for two</td>\r\n              <td>\r\n                {props.restaurant.currency +\r\n                  \" \" +\r\n                  props.restaurant.average_cost_for_two}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"card-footer\">\r\n        <Link\r\n          to={`/restaurant/${props.restaurant.id}`}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <button type=\"button\" className=\"btn btn-outline-success btn-block\">\r\n            View Restaurant Details\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default RestaurantCard;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../config/api\";\r\nimport CategoryList from \"../components/CategoryList\";\r\nimport SearchKeyword from \"../components/SearchKeyword\";\r\nimport SearchCriteria from \"../components/SearchCriteria\";\r\nimport RestaurantCard from \"../components/RestaurantCard\";\r\n\r\nclass City extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      city: null,\r\n      categories: null,\r\n      categorySelected: null,\r\n      keyword: \"\",\r\n      criteria: [],\r\n      restaurants: []\r\n    };\r\n  }\r\n\r\n  searchHandler = () => {\r\n    this.setState({ restaurants: null });\r\n    let url = `${API.zomato.baseUrl}/search`;\r\n    let params = {};\r\n\r\n    for (let cri of this.state.criteria) {\r\n      switch (cri.criteriaName) {\r\n        case \"City\":\r\n          params.entity_id = cri.data.id;\r\n          params.entity_type = \"city\";\r\n          break;\r\n        case \"Category\":\r\n          params.q = cri.data.id;\r\n          break;\r\n        case \"Keyword\":\r\n          params.q = cri.data.name;\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    axios\r\n      .get(url, {\r\n        headers: {\r\n          \"user-key\": API.zomato.api_key\r\n        },\r\n        params\r\n      })\r\n      .then(({ data }) => {\r\n        this.setState({ restaurants: data.restaurants });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n  transformCategoriesData = categories => {\r\n    let categoriesTransformed = categories.map(category => {\r\n      return category.categories;\r\n    });\r\n    return categoriesTransformed;\r\n  };\r\n\r\n  getCityData = city_id => {\r\n    let url = `${API.zomato.baseUrl}/cities`;\r\n    axios\r\n      .get(url, {\r\n        headers: {\r\n          \"user-key\": API.zomato.api_key\r\n        },\r\n        params: {\r\n          city_ids: `${city_id}`\r\n        }\r\n      })\r\n      .then(({ data }) => {\r\n        let city = data.location_suggestions[0];\r\n        let newCriteria = {\r\n          criteriaName: \"City\",\r\n          data: city\r\n        };\r\n        let criteria = [...this.state.criteria];\r\n        criteria.push(newCriteria);\r\n\r\n        this.setState({ city, criteria });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n  componentDidMount() {\r\n    let { city_id } = this.props.match.params;\r\n    this.getCityData(city_id);\r\n    this.getCategoriesData();\r\n  }\r\n  categoryClickHandler = category => {\r\n    let criteria = [...this.state.criteria];\r\n    criteria = criteria.filter(cri => cri.criteriaName !== \"Category\");\r\n    let newCriteria = {\r\n      criteriaName: \"Category\",\r\n      data: category\r\n    };\r\n    criteria.push(newCriteria);\r\n    this.setState({ categorySelected: category, criteria });\r\n  };\r\n  changeKeywordHandler = event => {\r\n    this.setState({ keyword: event.target.value });\r\n  };\r\n  addToCriteriaHandler = () => {\r\n    let criteria = [...this.state.criteria];\r\n    criteria = criteria.filter(cri => cri.criteriaName !== \"Keyword\");\r\n    let newCriteria = {\r\n      criteriaName: \"Keyword\",\r\n      data: {\r\n        name: this.state.keyword\r\n      }\r\n    };\r\n    criteria.push(newCriteria);\r\n    this.setState({ keyword: \"\", criteria });\r\n  };\r\n  removeCriteriaHandler = index => {\r\n    let criteria = [...this.state.criteria];\r\n    criteria.splice(index, 1);\r\n    this.setState({ criteria });\r\n  };\r\n  getCategoriesData = () => {\r\n    let url = `${API.zomato.baseUrl}/categories`;\r\n    axios\r\n      .get(url, {\r\n        headers: {\r\n          \"user-key\": API.zomato.api_key\r\n        }\r\n      })\r\n      .then(({ data }) => {\r\n        let categories = this.transformCategoriesData(data.categories);\r\n        this.setState({ categories });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n  renderRestaurantList = () => {\r\n    if (this.state.restaurants === null) {\r\n      return (\r\n        <div className=\"col\">\r\n          <p>Loading...</p>\r\n        </div>\r\n      );\r\n    }\r\n    if (this.state.restaurants.length > 0) {\r\n      return this.state.restaurants.map(({ restaurant }) => (\r\n        <RestaurantCard key={restaurant.id} restaurant={restaurant} />\r\n      ));\r\n    } else {\r\n      return (\r\n        <div className=\"col\">\r\n          <p>No Data Available. Please select criteria and click search</p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"container-fluid\"\r\n        style={{ marginTop: 30, marginBottom: 30 }}\r\n      >\r\n        {this.state.city && (\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <h4 className=\"text-success\">\r\n                Restaurant in {this.state.city.name},{\" \"}\r\n                {this.state.city.country_name}\r\n              </h4>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-3\">\r\n            <h5>Categories</h5>\r\n            <CategoryList\r\n              categories={this.state.categories}\r\n              categorySelected={this.state.categorySelected}\r\n              categoryClickHandler={category =>\r\n                this.categoryClickHandler(category)\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            <SearchKeyword\r\n              onClickAddToCriteria={this.addToCriteriaHandler}\r\n              keyword={this.state.keyword}\r\n              changeKeywordHandler={this.changeKeywordHandler}\r\n            />\r\n            <SearchCriteria\r\n              criteria={this.state.criteria}\r\n              removeCriteriaHandler={index => this.removeCriteriaHandler(index)}\r\n              onClickSearch={this.searchHandler}\r\n            />\r\n            <div className=\"row\">\r\n              <div className=\"col\" style={{ marginBottom: 10 }}>\r\n                <h4 className=\"text-success\">Restaurant List</h4>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">{this.renderRestaurantList()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default City;\r\n","import React from \"react\";\r\nimport RatingLabel from \"./RatingLabel\";\r\n\r\nconst RestaurantProfile = props => (\r\n  <div className=\"card\">\r\n    <div className=\"card-header\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          {props.restaurant ? (\r\n            <>\r\n              <h4 className=\"text-success\" style={{ fontWeight: 800 }}>\r\n                {props.restaurant.name}\r\n              </h4>\r\n              <h6 style={{ fontWeight: 600 }}>\r\n                {props.restaurant.location.locality}\r\n              </h6>\r\n              <h6 className=\"text-muted\">\r\n                {props.restaurant.location.address}\r\n              </h6>\r\n            </>\r\n          ) : (\r\n            <p>Loading...</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"card-body\">\r\n      {props.restaurant ? (\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <img\r\n              class=\"img-responsive\"\r\n              src={props.restaurant.featured_image}\r\n              alt=\"\"\r\n              style={{ borderRadius: 5, width: 500 }}\r\n            ></img>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <table className=\"table\">\r\n              <tbody>\r\n                <tr>\r\n                  <td>Rating</td>\r\n                  <td>\r\n                    <p>\r\n                      <RatingLabel\r\n                        labelColor={props.restaurant.user_rating.rating_color}\r\n                        text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`}\r\n                      />\r\n                    </p>\r\n                    <h6>{props.restaurant.user_rating.votes} Votes</h6>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Cuisines</td>\r\n                  <td>{props.restaurant.cuisines}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Cost for two</td>\r\n                  <td>\r\n                    {props.restaurant.currency +\r\n                      \" \" +\r\n                      props.restaurant.average_cost_for_two}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default RestaurantProfile;\r\n","import React from \"react\";\r\nimport RatingLabel from \"./RatingLabel\"\r\n\r\nconst Review = props => (\r\n  <div className=\"card border-success\" style={{ marginBottom: 5 }}>\r\n    <div className=\"card-body\">\r\n      <div className=\"row\" style={{ marginBottom: 20 }}>\r\n        <div className=\"col-1\" style={{ border: \"0px solid black\" }}>\r\n          <img\r\n            class=\"img-responsive\"\r\n            src={props.review.user.profile_image}\r\n            alt=\"\"\r\n            style={{ borderRadius: \"50%\", width: 80 }}\r\n          ></img>\r\n        </div>\r\n        <div className=\"col-11\" style={{ border: \"0px solid black\" }}>\r\n          <h6 className=\"font-weight-bold\">{props.review.user.name}</h6>\r\n          <RatingLabel\r\n            text={`${props.review.user.foodie_level_num} (${props.review.user.foodie_level})`}\r\n            labelColor={`${props.review.user.foodie_color}`}\r\n          />\r\n        </div>\r\n      </div>\r\n      <h6 className=\"card-text text-muted\">{props.review.review_time_friendly}</h6>\r\n      <RatingLabel\r\n        text={`${props.review.rating} (${props.review.rating_text})`}\r\n        labelColor={`${props.review.rating_color}`}\r\n      />\r\n      <p className=\"card-text\">{props.review.review_text}</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Review;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../config/api\";\r\nimport RestaurantProfile from \"../components/RestaurantProfile\";\r\nimport RatingLabel from \"../components/RatingLabel\";\r\nimport Review from \"../components/Review\";\r\n\r\nclass RestaurantDetail extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      restaurant: null,\r\n      reviews: null\r\n    };\r\n  }\r\n  getRestaurantData = restaurant_id => {\r\n    let url = `${API.zomato.baseUrl}/restaurant`;\r\n    axios\r\n      .get(url, {\r\n        headers: {\r\n          \"user-key\": API.zomato.api_key\r\n        },\r\n        params: {\r\n          res_id: restaurant_id\r\n        }\r\n      })\r\n      .then(({ data }) => {\r\n        this.setState({ restaurant: data });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n  getReviewData = restaurant_id => {\r\n    let url = `${API.zomato.baseUrl}/reviews`;\r\n    axios\r\n      .get(url, {\r\n        headers: {\r\n          \"user-key\": API.zomato.api_key\r\n        },\r\n        params: {\r\n          res_id: restaurant_id\r\n        }\r\n      })\r\n      .then(({ data }) => {\r\n        this.setState({ reviews: data.user_reviews });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n  componentDidMount() {\r\n    let { params } = this.props.match;\r\n    this.getRestaurantData(params.restaurant_id);\r\n    this.getReviewData(params.restaurant_id);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\" style={{ marginTop: 30, marginBottom: 30 }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\" style={{ marginBottom: 20 }}>\r\n            <RestaurantProfile restaurant={this.state.restaurant} />\r\n            <div className=\"col-12\" style={{ marginBottom: 20 }}>\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"text-success\" style={{ fontWeight: 800 }}>\r\n                    Reviews\r\n                  </h4>\r\n                  {this.state.reviews ? (\r\n                    this.state.reviews.map(({ review }) => (\r\n                      <Review key={review.id} review={review} />\r\n                    ))\r\n                  ) : (\r\n                    <p>Loading...</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RestaurantDetail;\r\n","import React, { Component } from \"react\";\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer/Footer';\nimport Home from \"./pages/Home\";\nimport City from \"./pages/City\";\nimport RestaurantDetail from \"./pages/RestaurantDetail\"\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    \n    return (\n      <Router>\n        <Navbar />\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/city/:city_id\" component={City} />\n        <Route path=\"/restaurant/:restaurant_id\" component={RestaurantDetail} />\n        <Footer />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nrequire('dotenv').config();"],"sourceRoot":""}